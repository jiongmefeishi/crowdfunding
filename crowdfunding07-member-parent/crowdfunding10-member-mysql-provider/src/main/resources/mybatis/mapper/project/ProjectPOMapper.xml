<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zqt.crowd.mapper.project.ProjectPOMapper">

    <!-- 查询首页项目展示数据 S -->
    <!--
        1、查询首页数据封装的信息，需要resultMap : loadPortalProjectListResultMap
        PortalTypeVO 中包含 PortalProjectVO， 所以需要查询 PortalProjectVO 的信息
     -->
    <select id="selectPortalTypeVOList" resultMap="loadPortalProjectListResultMap">
		select t.id, t.name, t.remark from project_type t
	</select>

    <!--
        2、封装selectPortalTypeVOList 查询返回的Map，同时调用 selectPortalProjectVOList 查询语句
        查询 PortalProjectVO 信息，用来封装进PortalTypeVO 中作为返回结果
    -->
    <resultMap type="com.zqt.crowd.entity.vo.portal.PortalTypeVO" id="loadPortalProjectListResultMap">

        <!-- 分类数据的常规属性 -->
        <id column="id" property="id"/>
        <result column="name" property="name"/>
        <result column="remark" property="remark"/>

        <!-- 分类数据中包含的项目数据的List -->
        <!-- property属性：指定对应方法中返回的属性，对应PortalTypeVO中分类数据中的项目数据的List属性 -->
        <!-- column属性：指定查询注入参数，接下来查询项目具体信息（PortalProjectVO）时需要用到分类id，就是通过column属性把值传入 -->
        <!-- ofType属性：指定返回类型，项目数据的实体类型PortalProjectVO -->
        <collection
                property="portalProjectVOList"
                column="id"
                ofType="com.zqt.crowd.entity.vo.portal.PortalProjectVO"
                select="com.zqt.crowd.mapper.project.ProjectPOMapper.selectPortalProjectVOList"/>
    </resultMap>

    <!-- 3、根据项目id查询项目展示的具体信息 PortalProjectVO -->
    <select id="selectPortalProjectVOList" resultType="com.zqt.crowd.entity.vo.portal.PortalProjectVO">
        select
            a.id as projectId,
            a.project_name projectName,
            money,
            deploy_date as deployDate,
            support_money / money * 100 as percentage,
            supporter as supporter,
            header_picture_path as headerPicturePath
            from project a left join inner_project_type b on a.id=b.project_id
        where b.type_id=#{id}
        order by
                a.id desc
        limit 0, 4
	</select>
    <!-- 查询首页项目展示数据 E -->

    <resultMap id="BaseResultMap" type="com.zqt.crowd.entity.po.project.ProjectPO">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="project_name" property="projectName" jdbcType="VARCHAR"/>
        <result column="project_description" property="projectDescription" jdbcType="VARCHAR"/>
        <result column="money" property="money" jdbcType="BIGINT"/>
        <result column="day" property="day" jdbcType="INTEGER"/>
        <result column="status" property="status" jdbcType="INTEGER"/>
        <result column="deploy_date" property="deployDate" jdbcType="VARCHAR"/>
        <result column="support_money" property="supportMoney" jdbcType="BIGINT"/>
        <result column="supporter" property="supporter" jdbcType="INTEGER"/>
        <result column="completion" property="completion" jdbcType="INTEGER"/>
        <result column="member_id" property="memberId" jdbcType="INTEGER"/>
        <result column="create_date" property="createDate" jdbcType="VARCHAR"/>
        <result column="follower" property="follower" jdbcType="INTEGER"/>
        <result column="header_picture_path" property="headerPicturePath" jdbcType="VARCHAR"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, project_name, project_description, money, day, status, deploy_date, support_money, 
    supporter, completion, member_id, create_date, follower, header_picture_path
  </sql>
    <select id="selectByExample" resultMap="BaseResultMap"
            parameterType="com.zqt.crowd.entity.po.project.ProjectPOExample">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from project
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from project
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from project
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="com.zqt.crowd.entity.po.project.ProjectPOExample">
        delete from project
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.zqt.crowd.entity.po.project.ProjectPO">
    insert into project (id, project_name, project_description, 
      money, day, status, 
      deploy_date, support_money, supporter, 
      completion, member_id, create_date, 
      follower, header_picture_path)
    values (#{id,jdbcType=INTEGER}, #{projectName,jdbcType=VARCHAR}, #{projectDescription,jdbcType=VARCHAR}, 
      #{money,jdbcType=BIGINT}, #{day,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, 
      #{deployDate,jdbcType=VARCHAR}, #{supportMoney,jdbcType=BIGINT}, #{supporter,jdbcType=INTEGER}, 
      #{completion,jdbcType=INTEGER}, #{memberId,jdbcType=INTEGER}, #{createDate,jdbcType=VARCHAR}, 
      #{follower,jdbcType=INTEGER}, #{headerPicturePath,jdbcType=VARCHAR})
  </insert>
    <insert id="insertSelective" parameterType="com.zqt.crowd.entity.po.project.ProjectPO"
            useGeneratedKeys="true" keyProperty="id">
        insert into project
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="projectName != null">
                project_name,
            </if>
            <if test="projectDescription != null">
                project_description,
            </if>
            <if test="money != null">
                money,
            </if>
            <if test="day != null">
                day,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="deployDate != null">
                deploy_date,
            </if>
            <if test="supportMoney != null">
                support_money,
            </if>
            <if test="supporter != null">
                supporter,
            </if>
            <if test="completion != null">
                completion,
            </if>
            <if test="memberId != null">
                member_id,
            </if>
            <if test="createDate != null">
                create_date,
            </if>
            <if test="follower != null">
                follower,
            </if>
            <if test="headerPicturePath != null">
                header_picture_path,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="projectName != null">
                #{projectName,jdbcType=VARCHAR},
            </if>
            <if test="projectDescription != null">
                #{projectDescription,jdbcType=VARCHAR},
            </if>
            <if test="money != null">
                #{money,jdbcType=BIGINT},
            </if>
            <if test="day != null">
                #{day,jdbcType=INTEGER},
            </if>
            <if test="status != null">
                #{status,jdbcType=INTEGER},
            </if>
            <if test="deployDate != null">
                #{deployDate,jdbcType=VARCHAR},
            </if>
            <if test="supportMoney != null">
                #{supportMoney,jdbcType=BIGINT},
            </if>
            <if test="supporter != null">
                #{supporter,jdbcType=INTEGER},
            </if>
            <if test="completion != null">
                #{completion,jdbcType=INTEGER},
            </if>
            <if test="memberId != null">
                #{memberId,jdbcType=INTEGER},
            </if>
            <if test="createDate != null">
                #{createDate,jdbcType=VARCHAR},
            </if>
            <if test="follower != null">
                #{follower,jdbcType=INTEGER},
            </if>
            <if test="headerPicturePath != null">
                #{headerPicturePath,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <!--保存项目、分类的关联关系信息-->
    <insert id="insertInnerTypeAndProject">
        insert into inner_project_type (project_id, type_id) values
        <foreach collection="typeIdList" item="item" separator=",">
            (#{projectId}, #{item})
        </foreach>
    </insert>
    <!--保存项目、标签的关联关系信息-->
    <insert id="insertInnerTagAndProject">
        insert into inner_project_tag (project_id, tag_id) values
        <foreach collection="tagIdList" item="item" separator=",">
            (#{projectId}, #{item})
        </foreach>
    </insert>
    <select id="countByExample" parameterType="com.zqt.crowd.entity.po.project.ProjectPOExample"
            resultType="java.lang.Integer">
        select count(*) from project
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update project
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.projectName != null">
                project_name = #{record.projectName,jdbcType=VARCHAR},
            </if>
            <if test="record.projectDescription != null">
                project_description = #{record.projectDescription,jdbcType=VARCHAR},
            </if>
            <if test="record.money != null">
                money = #{record.money,jdbcType=BIGINT},
            </if>
            <if test="record.day != null">
                day = #{record.day,jdbcType=INTEGER},
            </if>
            <if test="record.status != null">
                status = #{record.status,jdbcType=INTEGER},
            </if>
            <if test="record.deployDate != null">
                deploy_date = #{record.deployDate,jdbcType=VARCHAR},
            </if>
            <if test="record.supportMoney != null">
                support_money = #{record.supportMoney,jdbcType=BIGINT},
            </if>
            <if test="record.supporter != null">
                supporter = #{record.supporter,jdbcType=INTEGER},
            </if>
            <if test="record.completion != null">
                completion = #{record.completion,jdbcType=INTEGER},
            </if>
            <if test="record.memberId != null">
                member_id = #{record.memberId,jdbcType=INTEGER},
            </if>
            <if test="record.createDate != null">
                create_date = #{record.createDate,jdbcType=VARCHAR},
            </if>
            <if test="record.follower != null">
                follower = #{record.follower,jdbcType=INTEGER},
            </if>
            <if test="record.headerPicturePath != null">
                header_picture_path = #{record.headerPicturePath,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update project
        set id = #{record.id,jdbcType=INTEGER},
        project_name = #{record.projectName,jdbcType=VARCHAR},
        project_description = #{record.projectDescription,jdbcType=VARCHAR},
        money = #{record.money,jdbcType=BIGINT},
        day = #{record.day,jdbcType=INTEGER},
        status = #{record.status,jdbcType=INTEGER},
        deploy_date = #{record.deployDate,jdbcType=VARCHAR},
        support_money = #{record.supportMoney,jdbcType=BIGINT},
        supporter = #{record.supporter,jdbcType=INTEGER},
        completion = #{record.completion,jdbcType=INTEGER},
        member_id = #{record.memberId,jdbcType=INTEGER},
        create_date = #{record.createDate,jdbcType=VARCHAR},
        follower = #{record.follower,jdbcType=INTEGER},
        header_picture_path = #{record.headerPicturePath,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.zqt.crowd.entity.po.project.ProjectPO">
        update project
        <set>
            <if test="projectName != null">
                project_name = #{projectName,jdbcType=VARCHAR},
            </if>
            <if test="projectDescription != null">
                project_description = #{projectDescription,jdbcType=VARCHAR},
            </if>
            <if test="money != null">
                money = #{money,jdbcType=BIGINT},
            </if>
            <if test="day != null">
                day = #{day,jdbcType=INTEGER},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=INTEGER},
            </if>
            <if test="deployDate != null">
                deploy_date = #{deployDate,jdbcType=VARCHAR},
            </if>
            <if test="supportMoney != null">
                support_money = #{supportMoney,jdbcType=BIGINT},
            </if>
            <if test="supporter != null">
                supporter = #{supporter,jdbcType=INTEGER},
            </if>
            <if test="completion != null">
                completion = #{completion,jdbcType=INTEGER},
            </if>
            <if test="memberId != null">
                member_id = #{memberId,jdbcType=INTEGER},
            </if>
            <if test="createDate != null">
                create_date = #{createDate,jdbcType=VARCHAR},
            </if>
            <if test="follower != null">
                follower = #{follower,jdbcType=INTEGER},
            </if>
            <if test="headerPicturePath != null">
                header_picture_path = #{headerPicturePath,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.zqt.crowd.entity.po.project.ProjectPO">
    update project
    set project_name = #{projectName,jdbcType=VARCHAR},
      project_description = #{projectDescription,jdbcType=VARCHAR},
      money = #{money,jdbcType=BIGINT},
      day = #{day,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      deploy_date = #{deployDate,jdbcType=VARCHAR},
      support_money = #{supportMoney,jdbcType=BIGINT},
      supporter = #{supporter,jdbcType=INTEGER},
      completion = #{completion,jdbcType=INTEGER},
      member_id = #{memberId,jdbcType=INTEGER},
      create_date = #{createDate,jdbcType=VARCHAR},
      follower = #{follower,jdbcType=INTEGER},
      header_picture_path = #{headerPicturePath,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>