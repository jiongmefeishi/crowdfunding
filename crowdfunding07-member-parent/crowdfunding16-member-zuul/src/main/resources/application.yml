server:
  port: 80

# 自定义客户端和服务端交互主机名和端口号 如本地单机：localhost, 阿里云服务器 47.100.123.xx
zqtao:
  eureka:
    server:
      connection:
        hostname: localhost
        port: 9008
# spring
spring:
  application:
    # 服务名，默认取 spring.application.name 配置值，如果没有则为 unknown
    name: crowdfunding-member-zuul
  # 配置spring-session 共享，存储在redis
  redis:
    host: 47.107.40.162
    # 设置Redis 访问密码，阿里云必须设置访问密码，不然访问会失效
    password: foobaredzqt
  # 指定存储方式类型是 redis
  session:
    store-type: redis

# eureka
eureka:
  client:
    serviceUrl:
      # Eureka客户端(如：consumer, provider)与 Eureka服务端的交互地址，高可用状态配置对方的地址，单机状态配置自己（如果不配置则默认本机8761端口）
      defaultZone: http://${zqtao.eureka.server.connection.hostname}:${zqtao.eureka.server.connection.port}/eureka/

# zuul 网关配置
zuul:
  # 让用户不能通过微服务名称访问
  # 忽略所有微服务名称
  ignored-services: '*'
  # 设置 zuul 向其他微服务重定向时，保持原本头信息（请求头，响应头）
  sensitive-headers: '*'
  routes:
    # 自定义会员系统网关
    crowd-portal:
      serviceId: crowdfunding-member-authentication-consumer
      path: /**
    crowd-project:
      service-id: crowdfunding-member-project-consumer
      # 设置访问前缀，pj 为 project 简写，前端访问，走zuul 网关层需要携带 pj
      path: /pj/**


# 让用户不能通过微服务名称访问
  # ignored-services: '*' # 忽略所有微服务名称

  # 忽略指定微服务名称，让用户不能通过微服务名称访问  使用 - 指定忽略单个微服务名称
  # ignored-services:
  #  - spring-cloud-feign-consumer
  # 给访问路径添加统一前缀
  # http://localhost:8000/zqtao/zuul-emp/feign/consumer/search?keyword=2
  # prefix: /zqtao
  # routes:
    # 使用指定地址代替微服务名称
    # 原请求: http://localhost:8000/spring-cloud-feign-consumer/feign/consumer/search?keyword=2
    # 现请求: http://localhost:8000/zuul-emp/feign/consumer/search?keyword=2
    # employee 是自定义的属性，区分要替换的微服务
    # employee:
      # 需要进行替换的目标微服务服务名
      # serviceId: spring-cloud-feign-consumer
      # 设置请求匹配路径，使用 path属性设置的路径来进行替换 serviceId 属性中的微服务名称
      # /**表示匹配多层路径，如果没有加/**则不能匹配后续的多层路径了
      # path: /zuul-emp/**

# 配置超时机制重试机制
ribbon:
  OkToRetryOnAllOperations: false #对所有操作请求都进行重试,默认false
  ReadTimeout: 5000   #负载均衡超时时间，默认值5000
  ConnectTimeout: 3000 #ribbon请求连接的超时时间，默认值2000
  MaxAutoRetries: 1     #对当前实例的重试次数，默认0
  MaxAutoRetriesNextServer: 1 #对切换实例的重试次数，默认1

# 配置超时熔断，在消费者中需要配置超时熔断机制
hystrix:
  command:
    default:  #default全局有效，service id指定应用有效
      execution:
        timeout:
          #如果enabled设置为false，则请求超时交给ribbon控制,为true,则超时作为熔断根据
          enabled: true
        isolation:
          thread:
            timeoutInMilliseconds: 9000 #断路器超时时间，默认1000ms