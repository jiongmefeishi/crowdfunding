server:
  port: 9012

# 自定义客户端和服务端交互主机名和端口号 如本地单机：localhost, 阿里云服务器 47.100.123.xx
zqtao:
  eureka:
    server:
      connection:
        hostname: localhost
        port: 9008
# spring
spring:
  application:
    # 服务名，默认取 spring.application.name 配置值，如果没有则为 unknown
    name: crowdfunding-member-authentication-consumer
  # 配置spring-session 共享，存储在redis
  redis:
    host: 47.107.40.162
    # 设置Redis 访问密码，阿里云必须设置访问密码，不然访问会失效
    password: foobaredzqt
  # 指定存储方式类型是 redis
  session:
    store-type: redis
  # 配置前端模板
  thymeleaf:
    # 禁止模板缓存，默认开启缓存编译模板，避免因模板的重复解析而降低系统性能
    # 开发环境下，不禁止需要不断重启
    cache: false
    # 配置前缀
    prefix: classpath:/templates/
    # 配置后缀
    suffix: .html

# eureka
eureka:
  client:
    serviceUrl:
      # Eureka客户端(如：consumer, provider)与 Eureka服务端的交互地址，高可用状态配置对方的地址，单机状态配置自己（如果不配置则默认本机8761端口）
      defaultZone: http://${zqtao.eureka.server.connection.hostname}:${zqtao.eureka.server.connection.port}/eureka/

# 配置短信发送参数
sms:
  # 是否开启短信发送功能
  active: true
  message:
    # 阿里云短信服务器
    sys-domain: dysmsapi.aliyuncs.com
    # 版本
    sys-version: 2017-05-25
    # 服务器所在区域id，cn-hangzhou 表示华东（杭州）
    region-id: cn-hangzhou
    # 接收短信的手机号码
    # phone-numbers: 15670255891
    # 短信签名名称
    sign-name: 怪兽营
    # 短信模板ID
    template-code: SMS_200190922
      # 短信模板变量对应的实际值
      # template-param:
      # 验证码
      # code:
    # 主账号AccessKey的ID
    access-key-id: LTAI4GFD8QwgVyBrvNJBGj8Jz
    # AccessKeySecret是用来验证用户的密钥
    access-secret: wwzImeidhhe3iWoZ2TCF17FiXGiARmz
    # 系统规定参数。取值：SendSms
    action: SendSms

# 邮箱相关
mail:
  active: true
  message:
    # 收件人账号如：3455533@qq.com
    # to:
    # 主题
    subject: 【怪兽营】
    # 是否是HTML
    htmlOrNot: false
    # 附件列表
    # files:
    # 随机码(验证码), 系统生成6位随机数
    # code:
    # 签名名称
    signName: 【怪兽营】
    # 正文
    # 签名名称 + 消息内容 + 验证码（有则带上）
    content: 怪兽营邮件已成功发送

# 全局配置项目重定向到 zuul 网关层
# 不然进行在不同微服务进行重定向时会导致异常（前后端分离项目请忽略）
my:
  redirect:
    # 网关统一重定向地址
    path: http://www.fuck.com

# 配置超时机制重试机制
ribbon:
  OkToRetryOnAllOperations: false #对所有操作请求都进行重试,默认false
  ReadTimeout: 3000   #负载均衡超时时间，默认值5000
  ConnectTimeout: 1000 #ribbon请求连接的超时时间，默认值2000
  MaxAutoRetries: 0     #对当前实例的重试次数，默认0
  MaxAutoRetriesNextServer: 1 #对切换实例的重试次数，默认1

# 配置超时熔断，在消费者中需要配置超时熔断机制
hystrix:
  command:
    default:  #default全局有效，service id指定应用有效
      execution:
        timeout:
          #如果enabled设置为false，则请求超时交给ribbon控制,为true,则超时作为熔断根据
          enabled: true
        isolation:
          thread:
            timeoutInMilliseconds: 5000 #断路器超时时间，默认1000ms