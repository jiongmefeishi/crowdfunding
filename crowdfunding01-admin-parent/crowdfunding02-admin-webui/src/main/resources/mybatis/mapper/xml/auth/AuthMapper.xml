<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zqt.crowd.mapper.AuthMapper">

    <!-- 权限 auth mapper SQL -->

    <resultMap id="BaseResultMap" type="com.zqt.crowd.entity.auth.Auth">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="title" property="title" jdbcType="VARCHAR"/>
        <result column="category_id" property="categoryId" jdbcType="INTEGER"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, name, title, category_id
  </sql>
    <!-- 根据角色id 查询分配到的 权限列表id -->
    <select id="selectAssignedAuthIdByRoleId" resultType="java.lang.Integer" parameterType="java.lang.Integer">
        select auth_id
        from t_inner_role_auth
        where role_id = #{roleId}
    </select>
    <!-- 根据角色id 查询分配到的 权限列表名称-->
    <select id="selectAssignedAuthNameByAdminId" resultType="java.lang.String" parameterType="java.lang.Integer">
        select distinct t_auth.name
        from t_auth
                 left join t_inner_role_auth tira on t_auth.id = tira.auth_id
                 left join t_inner_admin_role tiar on tira.role_id = tiar.role_id
        where tiar.admin_id = #{adminId}
          and t_auth.name != ''
          and t_auth.name is not null
    </select>
    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.zqt.crowd.entity.auth.AuthExample">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from t_auth
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from t_auth
        where id = #{id,jdbcType=INTEGER}
    </select>
    <!-- 根据roleId 删除旧的关联关系 -->
    <delete id="deleteOldRelationship" parameterType="java.lang.Integer">
        delete from t_inner_role_auth
        where role_id = #{roleId}
    </delete>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_auth
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="com.zqt.crowd.entity.auth.AuthExample">
        delete from t_auth
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <!-- 根据角色id 和 权限id列表 建立新的关联关系 -->
    <insert id="insertNewRelationship">
        insert into t_inner_role_auth (role_id, auth_id) values
        <foreach collection="authIdList" item="authId" separator=",">
            <if test="authId != null">
                (#{roleId}, #{authId})
            </if>
        </foreach>
    </insert>
    <insert id="insert" parameterType="com.zqt.crowd.entity.auth.Auth">
    insert into t_auth (id, name, title, 
      category_id)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{title,jdbcType=VARCHAR}, 
      #{categoryId,jdbcType=INTEGER})
  </insert>
    <insert id="insertSelective" parameterType="com.zqt.crowd.entity.auth.Auth">
        insert into t_auth
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="title != null">
                title,
            </if>
            <if test="categoryId != null">
                category_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="title != null">
                #{title,jdbcType=VARCHAR},
            </if>
            <if test="categoryId != null">
                #{categoryId,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.zqt.crowd.entity.auth.AuthExample" resultType="java.lang.Integer">
        select count(*) from t_auth
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update t_auth
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.name != null">
                name = #{record.name,jdbcType=VARCHAR},
            </if>
            <if test="record.title != null">
                title = #{record.title,jdbcType=VARCHAR},
            </if>
            <if test="record.categoryId != null">
                category_id = #{record.categoryId,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update t_auth
        set id = #{record.id,jdbcType=INTEGER},
        name = #{record.name,jdbcType=VARCHAR},
        title = #{record.title,jdbcType=VARCHAR},
        category_id = #{record.categoryId,jdbcType=INTEGER}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.zqt.crowd.entity.auth.Auth">
        update t_auth
        <set>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="title != null">
                title = #{title,jdbcType=VARCHAR},
            </if>
            <if test="categoryId != null">
                category_id = #{categoryId,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.zqt.crowd.entity.auth.Auth">
    update t_auth
    set name = #{name,jdbcType=VARCHAR},
      title = #{title,jdbcType=VARCHAR},
      category_id = #{categoryId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>